name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Proxmon v${{ steps.get_version.outputs.version }}
          body: |
            ## Proxmon v${{ steps.get_version.outputs.version }}

            ðŸŽ® **Gotta manage 'em all!** - A blazingly fast terminal UI for Proxmox

            ### Installation

            Download the appropriate binary for your platform below, extract it, and move it to your PATH.

            **macOS:**
            ```bash
            # Apple Silicon (M1/M2/M3)
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/proxmon-darwin-aarch64.tar.gz | tar xz

            # Intel
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/proxmon-darwin-x86_64.tar.gz | tar xz

            # Install
            chmod +x proxmon
            sudo mv proxmon /usr/local/bin/
            ```

            **Linux:**
            ```bash
            curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/proxmon-linux-x86_64.tar.gz | tar xz
            chmod +x proxmon
            sudo mv proxmon /usr/local/bin/
            ```

            **Windows:**
            Download `proxmon-windows-x86_64.zip`, extract, and add to your PATH.

            ### Alternative Installation

            If you have Rust/Cargo installed:
            ```bash
            cargo install proxmon
            ```

            ### Checksums

            SHA-256 checksums are provided for all binaries below.
          draft: false
          prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS
          - target: x86_64-apple-darwin
            os: macos-latest
            name: proxmon-darwin-x86_64.tar.gz

          - target: aarch64-apple-darwin
            os: macos-latest
            name: proxmon-darwin-aarch64.tar.gz

          # Linux
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-20.04  # Use older Ubuntu for better glibc compatibility
            name: proxmon-linux-x86_64.tar.gz

          - target: x86_64-unknown-linux-musl
            os: ubuntu-20.04
            name: proxmon-linux-x86_64-musl.tar.gz

          # Windows
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: proxmon-windows-x86_64.zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install musl tools (Linux MUSL)
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/proxmon

      - name: Create archive (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ../../../${{ matrix.name }} proxmon
          cd -

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cd target/${{ matrix.target }}/release
          Compress-Archive -Path proxmon.exe -DestinationPath ../../../${{ matrix.name }}
          cd -

      - name: Generate SHA-256 checksum
        shell: bash
        run: |
          if [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            shasum -a 256 ${{ matrix.name }} > ${{ matrix.name }}.sha256
          else
            sha256sum ${{ matrix.name }} > ${{ matrix.name }}.sha256
          fi

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.name }}
          asset_name: ${{ matrix.name }}
          asset_content_type: application/octet-stream

      - name: Upload Checksum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.name }}.sha256
          asset_name: ${{ matrix.name }}.sha256
          asset_content_type: text/plain
